/*
 * parallelAnts.xc
 *
 *  Created on: Oct 5, 2018
 *      Author: ainesh1998
 */

#include <stdio.h>

// Ant position
struct Position {
    int row;
    int col;
};
typedef struct Position Position;

// Ant data structure
struct Ant {
    int id;
    Position p;
    int foodCounter;
};
typedef struct Ant Ant;

void antMove(const int grid[3][4], Ant a) {
    int modRow = (a.p.row+1)%4;
    int modCol = (a.p.col+1)%4;
    if (grid[modRow][a.p.col] > grid[a.p.row][modCol]) {
        a.foodCounter += grid[modRow][a.p.col];
        a.p.row = modRow;
    }
    else {
        a.foodCounter += grid[a.p.row][modCol];
        a.p.col = modCol;
    }
    printf("Food counter for ant %d = %d.\n", a.id, a.foodCounter);
}


void ant(const int grid[3][4], Ant a, Position p) {
    antMove(grid, a);
    antMove(grid, a);
    printf("Ant info for ant %d:\n Position: (%d,%d).\n", a.id, a.p.row, a.p.col);

}

int main(void){
    const int grid[3][4] = {{10,0,1,7},{2,10,0,3},{6,8,7,6}};
    Ant ant1 = {1, {0,1}, 0};
    Ant ant2 = {2, {1,2}, 0};
    Ant ant3 = {3, {0,2}, 0};
    Ant ant4 = {4, {1,0}, 0};

    par {
        ant(grid, ant1, ant1.p);
        ant(grid, ant2, ant2.p);
        ant(grid, ant3, ant3.p);
        ant(grid, ant4, ant4.p);
    }
    printf("all tests pass");

    return 0;
}
